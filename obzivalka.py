from telethon import events
import asyncio
import os
import sys


@borg.on(events.NewMessage(pattern=r"\.kus", outgoing=True))
async def _(event):
    if event.fwd_from:
        return
       
 
    await event.edit("–°–ª—ã—à—å")
    await asyncio.sleep(1)
    await event.edit("–¢—ã")
    await asyncio.sleep(1)
    await event.edit("–î–æ–ª–±–∞–µ–±")
    await asyncio.sleep(1)
    await event.edit("–í–æ–ª—à–µ–±–æ–µ –º—É–¥–∏–ª–æ")
    await asyncio.sleep(1)
    await event.edit("–£—à–ª—ë–ø–æ–∫ —Ñ–µ–º–∏–Ω–∏–∑–º–∞")
    await asyncio.sleep(1)
    await event.edit("–Å–±–Ω—É—Ç—ã–π –ø–∏–Ω–≥–≤–∏–Ω")
    await asyncio.sleep(1)
    await event.edit("–•—É—ë–≤—ã–π —Å–∫–∞–∑–æ—á–Ω–∏–∫")
    await asyncio.sleep(1)
    await event.edit("–Å–±–∞–Ω–∞—è –¥–æ—Å–∫–∞")
    await asyncio.sleep(1)
    await event.edit("–î—É—Ä–∫–∞ —Ö—É–π–Ω–∏")
    await asyncio.sleep(1)
    await event.edit("–î—è—Ç–µ–ª –Ω–∞ —Ö—É–µ")
    await asyncio.sleep(1)
    await event.edit("–ß–º–æ—à–Ω–∏–∫")
    await asyncio.sleep(1)
    await event.edit("–Ø–π—Ü–µ–≥–ª–æ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π")
    await asyncio.sleep(1)
    await event.edit("–ü–æ—Å–æ—Å–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –ü—É—Ç–∏–Ω–∞")
    await asyncio.sleep(1)
    await event.edit("–ö–æ—Ä–æ—á–µ")
    await asyncio.sleep(1)
    await event.edit("–ò–¥–∏ –Ω–∞—Ö—É–π")
    await asyncio.sleep(1)
    await event.edit("üåöü§ù")





